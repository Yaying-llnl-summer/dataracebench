{
"parallel loop 1":{
"file":"micro-benchmarks/DRB163-gpu-simdmissinglock1-orig-no.c",
"function":"main",
"loop id":"1",
"loop line":"24",
"loop column":"3",
"pragma type":"NULL",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["{",
"    var[i]=0;",
"  }"]
},
"parallel loop 2":{
"file":"micro-benchmarks/DRB163-gpu-simdmissinglock1-orig-no.c",
"function":"main",
"loop id":"3",
"loop line":"33",
"loop column":"5",
"pragma type":"simd",
"ordered":"false",
"offload":"true",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":["var[0:64]"],
"dependence list":[],
"body":["{",
"      omp_set_lock(&lck);",
"      var[i]++;",
"      omp_unset_lock(&lck);",
"    }"]
},
"parallel loop 3":{
"file":"micro-benchmarks/DRB163-gpu-simdmissinglock1-orig-no.c",
"function":"main",
"loop id":"2",
"loop line":"30",
"loop column":"3",
"pragma type":"teams ditribute parallel for",
"ordered":"false",
"offload":"true",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":["var[0:64]"],
"dependence list":[],
"body":["{",
"    #pragma omp critical",
"    #pragma omp simd",
"    for(int i=0; i<C; i++){",
"      omp_set_lock(&lck);",
"      var[i]++;",
"      omp_unset_lock(&lck);",
"    }",
"  }"]
},
"parallel loop 4":{
"file":"micro-benchmarks/DRB163-gpu-simdmissinglock1-orig-no.c",
"function":"main",
"loop id":"4",
"loop line":"40",
"loop column":"3",
"pragma type":"NULL",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["{",
"    if(var[i]!=100){",
"      printf(\"%d\\n\",var[i]);",
"    }",
"  }"]
}
}