{
"parallel loop 1":{
"file":"micro-benchmarks/DRB058-jacobikernel-orig-no.c",
"function":"initialize",
"loop id":"1",
"loop line":"70",
"loop column":"3",
"pragma type":"NULL",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["for (j = 0; j < m; j++)",
"    {",
"      xx = (int) (-1.0 + dx * (i - 1));       /* -1 < x < 1 */",
"      yy = (int) (-1.0 + dy * (j - 1));       /* -1 < y < 1 */",
"      u[i][j] = 0.0;",
"      f[i][j] = -1.0 * alpha * (1.0 - xx * xx) * (1.0 - yy * yy)",
"        - 2.0 * (1.0 - xx * xx) - 2.0 * (1.0 - yy * yy);",
"",
"    }"]
},
"parallel loop 2":{
"file":"micro-benchmarks/DRB058-jacobikernel-orig-no.c",
"function":"initialize",
"loop id":"2",
"loop line":"71",
"loop column":"5",
"pragma type":"NULL",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["{",
"      xx = (int) (-1.0 + dx * (i - 1));       /* -1 < x < 1 */",
"      yy = (int) (-1.0 + dy * (j - 1));       /* -1 < y < 1 */",
"      u[i][j] = 0.0;",
"      f[i][j] = -1.0 * alpha * (1.0 - xx * xx) * (1.0 - yy * yy)",
"        - 2.0 * (1.0 - xx * xx) - 2.0 * (1.0 - yy * yy);",
"",
"    }"]
},
"parallel loop 3":{
"file":"micro-benchmarks/DRB058-jacobikernel-orig-no.c",
"function":"jacobi",
"loop id":"1",
"loop line":"102",
"loop column":"3",
"pragma type":"NULL",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["{",
"      error = 0.0;",
"",
"/* Copy new solution into old */",
"#pragma omp parallel",
"      {",
"#pragma omp for private(i,j)",
"        for (i = 0; i < n; i++)",
"          for (j = 0; j < m; j++)",
"            uold[i][j] = u[i][j];",
"#pragma omp for private(i,j,resid) reduction(+:error) nowait",
"        for (i = 1; i < (n - 1); i++)",
"          for (j = 1; j < (m - 1); j++)",
"            {",
"              resid = (ax * (uold[i - 1][j] + uold[i + 1][j])",
"                       + ay * (uold[i][j - 1] + uold[i][j + 1]) +",
"                       b * uold[i][j] - f[i][j]) / b;",
"",
"              u[i][j] = uold[i][j] - omega * resid;",
"              error = error + resid * resid;",
"            }",
"      }",
"/*  omp end parallel */",
"",
"/* Error check */",
"",
"     k = k + 1;",
"      error = sqrt (error) / (n * m);",
"    }"]
},
"parallel loop 4":{
"file":"micro-benchmarks/DRB058-jacobikernel-orig-no.c",
"function":"jacobi",
"loop id":"2",
"loop line":"110",
"loop column":"9",
"pragma type":"parallel for",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":["i","j"],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["for (j = 0; j < m; j++)",
"            uold[i][j] = u[i][j];"]
},
"parallel loop 5":{
"file":"micro-benchmarks/DRB058-jacobikernel-orig-no.c",
"function":"jacobi",
"loop id":"4",
"loop line":"114",
"loop column":"9",
"pragma type":"parallel for",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":["i","j","resid"],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":["+:error"],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["for (j = 1; j < (m - 1); j++)",
"            {",
"              resid = (ax * (uold[i - 1][j] + uold[i + 1][j])",
"                       + ay * (uold[i][j - 1] + uold[i][j + 1]) +",
"                       b * uold[i][j] - f[i][j]) / b;",
"",
"              u[i][j] = uold[i][j] - omega * resid;",
"              error = error + resid * resid;",
"            }"]
},
"parallel loop 6":{
"file":"micro-benchmarks/DRB058-jacobikernel-orig-no.c",
"function":"jacobi",
"loop id":"3",
"loop line":"111",
"loop column":"11",
"pragma type":"NULL",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["uold[i][j] = u[i][j];"]
},
"parallel loop 7":{
"file":"micro-benchmarks/DRB058-jacobikernel-orig-no.c",
"function":"jacobi",
"loop id":"5",
"loop line":"115",
"loop column":"11",
"pragma type":"NULL",
"ordered":"false",
"offload":"false",
"multiversioned":"false",
"shared":[],
"private":[],
"firstprivate":[],
"lastprivate":[],
"linear":[],
"reduction":[],
"map to":[],
"map from":[],
"map tofrom":[],
"dependence list":[],
"body":["{",
"              resid = (ax * (uold[i - 1][j] + uold[i + 1][j])",
"                       + ay * (uold[i][j - 1] + uold[i][j + 1]) +",
"                       b * uold[i][j] - f[i][j]) / b;",
"",
"              u[i][j] = uold[i][j] - omega * resid;",
"              error = error + resid * resid;",
"            }"]
}
}